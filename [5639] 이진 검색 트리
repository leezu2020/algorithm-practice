import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		Tree t = new Tree();
		String a;
		while((a = br.readLine()) != null) {
			t.addNode(t, Integer.valueOf(a));
		}
		t.postOrder(t.root);
	}
}

class Node{
	int data;
	Node left;
	Node right;
	
	public Node(int data) {
		this.data = data;
	}
}

class Tree{
	Node root;
	
	public void addNode(Tree t, int data) {
		if(t.root == null) {
			root = new Node(data);
		} else {
			searchNode(t.root, data);
		}
	}
	
	public void searchNode(Node node, int data) {
		if(data < node.data) {
			if(node.left != null)
				searchNode(node.left, data);
			else
				node.left = new Node(data);
		} else if(data > node.data) {
			if(node.right != null)
				searchNode(node.right, data);
			else
				node.right = new Node(data);
		}
	}
	
	public void postOrder(Node node) {
		if(node.left != null) {
			postOrder(node.left);
		}
		if(node.right != null) {
			postOrder(node.right);
		}
		System.out.println(node.data);
	}
}
