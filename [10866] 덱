import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Deque;
import java.util.LinkedList;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		Deque<Integer> deque = new LinkedList<>();
		
		int n = Integer.parseInt(br.readLine());
		
		for(int i=0; i<n; i++) {
			String[] temp = br.readLine().split(" ");
			switch(temp[0]) {
				case "push_back":{
					deque.addLast(Integer.parseInt(temp[1]));
					break;
				}
				case "push_front":{
					deque.addFirst(Integer.parseInt(temp[1]));
					break;
				}
				case "pop_front":{
					sb.append(!deque.isEmpty() ? deque.pollFirst() : -1).append('\n');
					break;
				}
				case "pop_back":{
					sb.append(!deque.isEmpty() ? deque.pollLast() : -1).append('\n');
					break;
				}
				case "size":{
					sb.append(deque.size()).append('\n');
					break;
				}
				case "empty":{
					sb.append(deque.isEmpty()? 1 : 0).append('\n');
					break;
				}
				case "front":{
					sb.append(!deque.isEmpty() ? deque.peekFirst() : -1).append('\n');
					break;
				}
				case "back":{
					sb.append(!deque.isEmpty() ? deque.peekLast() : -1).append('\n');
					break;
				}
				
			}
		}
		
		System.out.println(sb);
	}
}
