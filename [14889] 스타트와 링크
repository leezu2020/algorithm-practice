import java.io.IOException;
import java.util.Scanner;

public class Main {
	static int n;
	static int[][] arr;
	static boolean[] visited;
	static int teamA=0;
	static int teamB=0;
	static int min=Integer.MAX_VALUE;
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);

		n = sc.nextInt();
		arr = new int[n][n];
		visited = new boolean[n];
		for(int i=0; i<n; i++) {
			for(int j=0;j<n; j++) {
				arr[i][j] = sc.nextInt();
			}
		}
		
		dfs(0, 0);
		System.out.println(min);
	}
	
	public static void dfs(int x, int d) {
		
		if(d == n / 2) {
			int result;
			teamA = 0;
			teamB = 0;
			for(int i=0; i<n; i++) {
				for(int j=i+1; j<n; j++) {
					if(visited[i] && visited[j]) {
						teamA += arr[i][j] + arr[j][i];
					} else if(!visited[i] && !visited[j]) {
						teamB += arr[i][j] + arr[j][i];
					}
				}
			}
			result = Math.abs(teamA - teamB);
			
			min = Math.min(min, result);
		}
		
		for(int i=x+1; i<n; i++) {
			visited[i] = true;
			dfs(i, d+1);
			visited[i] = false;
		}
		
	}
}
